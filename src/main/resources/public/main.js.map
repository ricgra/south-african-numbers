{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/phone-number.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/list-phone-numbers-form/list-phone-numbers-form.component.html","./src/app/components/list-phone-numbers-form/list-phone-numbers-form.component.ts","./src/app/components/upload-form/upload-form.component.html","./src/app/components/upload-form/upload-form.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/components/validate-phone-number-form/validate-phone-number-form.component.html","./src/app/components/validate-phone-number-form/validate-phone-number-form.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0E;AAGtC;;;AAO7B,MAAM,kBAAkB;IAG7B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QACxC,IAAI,CAAC,UAAU,GAAG,yCAAyC,CAAC;IAC9D,CAAC;IAEM,gBAAgB,CAAC,IAAU;QAChC,IAAI,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;QACxC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAEzC,MAAM,GAAG,GAAG,IAAI,gEAAW,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,MAAM,EAAE,QAAQ,EAAE;YACtE,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;IAEM,eAAe;QACpB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAoB,GAAG,IAAI,CAAC,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC;IAC1E,CAAC;IAEM,yBAAyB;QAC9B,IAAI,CAAC,WAAW,EAAE,CAAC,SAAS,CAC1B,CAAC,IAAI,EAAE,EAAE;YACP,yDAAM,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QAC7B,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAEM,mBAAmB,CAAC,WAAmB;QAC5C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CACxB,GAAG,IAAI,CAAC,UAAU,IAAI,WAAW,WAAW,EAC5C,EAAE,CACH,CAAC;IACJ,CAAC;IAEO,WAAW;QACjB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,MAAM,EAAE;YACnD,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;IACL,CAAC;;oFA5CU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;;;;;;;;;;;;;;;;;;;;;ACAb,MAAM,YAAY;IAGvB,YAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAF1D,UAAK,GAAG,6BAA6B,CAAC;IAEuB,CAAC;IAEvD,WAAW;QAChB,IAAI,CAAC,kBAAkB,CAAC,yBAAyB,EAAE,CAAC;IACtD,CAAC;;wEAPU,YAAY;4FAAZ,YAAY;QCTzB,yEAAuB;QACrB,yEAAiB;QACf,yEAAuB;QACrB,yEAA+B;QAC7B,yEAAuB;QACrB,wEAAmD;QAAA,uDAAW;QAAA,4DAAK;QACnE,wEAAyC;QACvC,wEAA6B;QAC3B,uEAAkD;QAAA,sEAAU;QAAA,4DAAI;QAClE,4DAAK;QACL,yEAA6B;QAC3B,wEAA8D;QAA7C,gIAAS,iBAAa,IAAC;QAAsB,sEAAU;QAAA,4DAAI;QAC9E,4DAAK;QACL,yEAA6B;QAC3B,yEAA8D;QAAA,8EAAkB;QAAA,4DAAI;QACtF,4DAAK;QACL,yEAA6B;QAC3B,yEAAiE;QAAA,+EAAmB;QAAA,4DAAI;QAC1F,4DAAK;QACP,4DAAK;QACP,4DAAM;QACR,4DAAM;QACN,4EAA+B;QACjC,4DAAM;QACR,4DAAM;QAER,4DAAM;;QArBuD,0DAAW;QAAX,0EAAW;;;;;;;;;;;;;;;;;;;;;;;ICMxD,qEAAiE;IAC7D,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,qEAAI;IAAA,uDAA6B;IAAA,4DAAK;IACtC,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACrC,4DAAK;;;IAHG,0DAAoB;IAApB,kFAAoB;IACpB,0DAA6B;IAA7B,2FAA6B;IAC7B,0DAAwB;IAAxB,sFAAwB;;ACJzC,MAAM,6BAA6B;IAGxC,YAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;IAAG,CAAC;IAE9D,QAAQ;QACN,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC,SAAS,CACjD,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QACjC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;;0GAdU,6BAA6B;6GAA7B,6BAA6B;QDV1C,yEAAuB;QACnB,yEAAuB;QACnB,2EAAkD;QAC9C,2EAA0B;QACtB,qEAAI;QACA,wEAAgB;QAAA,6DAAE;QAAA,4DAAK;QACvB,wEAAgB;QAAA,uEAAY;QAAA,4DAAK;QACjC,wEAAgB;QAAA,kEAAM;QAAA,4DAAK;QAC/B,4DAAK;QACT,4DAAQ;QACR,yEAAO;QACH,yHAIK;QACT,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QACV,4DAAM;;QARsC,2DAAmC;QAAnC,gJAAmC;;;;;;;;;;;;;;;;;;;;;;;IEA/D,wEAA4D;IACxD,uEAAwB;IAAA,oEAAS;IAAA,4DAAI;IACzC,4DAAK;;;IACL,wEAAoF;IAChF,uEAAuB;IAAA,uDAAiB;IAAA,4DAAI;IAChD,4DAAK;;;IADsB,0DAAiB;IAAjB,qFAAiB;;ACPrD,MAAM,mBAAmB;IAK9B,YAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAF1D,kBAAa,GAAW,EAAE,CAAC;IAEkC,CAAC;IAE9D,QAAQ,KAAU,CAAC;IAEnB,mBAAmB,CAAC,KAAU;QAC5B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,SAAS;QACP,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CACnE,CAAC,IAAI,EAAE,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAElB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAEnB,IAAI,CAAC,aAAa,GAAG,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC;QAC/C,CAAC,CACF,CAAC;IACJ,CAAC;;sFA1BU,mBAAmB;mGAAnB,mBAAmB;QDRhC,yEAAuB;QACnB,yEAAiB;QACb,yEAAuB;QACnB,wEAAoC;QAChC,wEAA6B;QACzB,2EAC2C;QAAvC,kJAAU,+BAA2B,IAAC;QAD1C,4DAC2C;QAC/C,4DAAK;QACL,wEAA6B;QACzB,4EAA2D;QAAtB,2IAAS,eAAW,IAAC;QAAC,qEAAU;QAAA,4DAAS;QAClF,4DAAK;QACL,6GAEK;QACL,+GAEK;QAET,4DAAK;QACT,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAVe,0DAA4B;QAA5B,4FAA4B;QAG5B,0DAAoD;QAApD,wHAAoD;;;;;;;;;;;;;;AEdzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AAEE;AACX;AACF;AAEW;AACT;AACsC;AACkC;AACS;;AAmBzH,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAPJ;YACP,uEAAa;YACb,4DAAY;YACZ,0DAAW;YACX,oEAAgB;YAChB,qEAAgB;SACjB;mIAIU,SAAS,mBAflB,2DAAY;QACZ,iGAAmB;QACnB,mIAA6B;QAC7B,4IAAgC,aAGhC,uEAAa;QACb,4DAAY;QACZ,0DAAW;QACX,oEAAgB;QAChB,qEAAgB;;;;;;;;;;;;;ACvBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACgE;AAClC;AAC2C;;;AAEhI,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,iGAAmB,EAAE;IACvD,EAAE,IAAI,EAAE,yBAAyB,EAAE,SAAS,EAAE,mIAA6B,EAAE;IAC7E;QACE,IAAI,EAAE,4BAA4B;QAClC,SAAS,EAAE,4IAAgC;KAC5C;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;;;;;;ICPR,wEAA6C;IACzC,uEAAwB;IAAA,oEAAS;IAAA,4DAAI;IACzC,4DAAK;;;IACL,wEAA8C;IAC1C,uEAAuB;IAAA,uDAAmB;IAAA,4DAAI;IAClD,4DAAK;;;IADsB,0DAAmB;IAAnB,uFAAmB;;ACLvD,MAAM,gCAAgC;IAM3C,YAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;IAAG,CAAC;IAE9D,QAAQ,KAAU,CAAC;IAEZ,2BAA2B;QAChC,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CACrE,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;YAC1B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC;QACtC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;;gHApBU,gCAAgC;gHAAhC,gCAAgC;QDT7C,yEAAuB;QACnB,yEAAiB;QACb,yEAAuB;QACnB,wEAAoC;QAChC,wEAA6B;QACzB,2EAA+C;QAA5B,yMAAyB;QAA5C,4DAA+C;QACnD,4DAAK;QACL,wEAA6B;QACzB,4EAA6E;QAAxC,wJAAS,iCAA6B,IAAC;QAAC,mEAAQ;QAAA,4DAAS;QAClG,4DAAK;QACL,0HAEK;QACL,4HAEK;QACT,4DAAK;QACT,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAdiC,0DAAyB;QAAzB,oFAAyB;QAK3C,0DAAa;QAAb,6EAAa;QAGb,0DAAc;QAAd,8EAAc;;;;;;;;;;;;;;;;;;;;AEbY;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { saveAs } from 'file-saver';\nimport { PhoneNumberOutput } from '../models/phonenumberoutput';\nimport { ValidateOutput } from '../models/validateoutput';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PhoneNumberService {\n  private backendUrl: string;\n\n  constructor(private httpClient: HttpClient) {\n    this.backendUrl = 'http://localhost:8080/rest/phone-number';\n  }\n\n  public uploadCSVRequest(file: File): Observable<HttpEvent<any>> {\n    let formData: FormData = new FormData();\n    formData.append('file', file, file.name);\n\n    const req = new HttpRequest('POST', `${this.backendUrl}/csv`, formData, {\n      responseType: 'json',\n    });\n\n    return this.httpClient.request(req);\n  }\n\n  public getPhoneNumbers(): Observable<PhoneNumberOutput> {\n    return this.httpClient.get<PhoneNumberOutput>(`${this.backendUrl}`, {});\n  }\n\n  public downloadPhoneNumbersAsCSV() {\n    this.downloadCsv().subscribe(\n      (data) => {\n        saveAs(data, 'export.csv');\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n\n  public validatePhoneNumber(phoneNumber: string): Observable<ValidateOutput> {\n    return this.httpClient.get<ValidateOutput>(\n      `${this.backendUrl}/${phoneNumber}/validate`,\n      {}\n    );\n  }\n\n  private downloadCsv(): Observable<any> {\n    return this.httpClient.get(`${this.backendUrl}/csv`, {\n      responseType: 'blob',\n    });\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { PhoneNumberService } from './services/phone-number.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'South African Phone Numbers';\n\n  constructor(private phoneNumberService: PhoneNumberService) {}\n\n  public exportAsCSV() {\n    this.phoneNumberService.downloadPhoneNumbersAsCSV();\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"card bg-dark my-5\">\n        <div class=\"card-body\">\n          <h2 class=\"card-title text-center text-white py-3\">{{ title }}</h2>\n          <ul class=\"text-center list-inline py-3\">\n            <li class=\"list-inline-item\">\n              <a routerLink=\"/upload-form\" class=\"btn btn-info\">Upload CSV</a>\n            </li>\n            <li class=\"list-inline-item\">\n              <a routerLink=\"\" (click)=\"exportAsCSV()\" class=\"btn btn-info\">Export CSV</a>\n            </li>\n            <li class=\"list-inline-item\">\n              <a routerLink=\"/list-phone-numbers-form\" class=\"btn btn-info\">List Phone Numbers</a>\n            </li>\n            <li class=\"list-inline-item\">\n              <a routerLink=\"/validate-phone-number-form\" class=\"btn btn-info\">Test a Phone Number</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n\n</div>","<div class=\"card my-5\">\n    <div class=\"card-body\">\n        <table class=\"table table-bordered table-striped\">\n            <thead class=\"thead-dark\">\n                <tr>\n                    <th scope=\"col\">id</th>\n                    <th scope=\"col\">phone number</th>\n                    <th scope=\"col\">status</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let phoneNumber of phoneNumbersOutput?.phoneNumbers\">\n                    <td>{{ phoneNumber.id }}</td>\n                    <td>{{ phoneNumber.phoneNumber }}</td>\n                    <td>{{ phoneNumber.status }}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PhoneNumberOutput } from 'src/app/models/phonenumberoutput';\nimport { PhoneNumberService } from 'src/app/services/phone-number.service';\n\n@Component({\n  selector: 'app-list-phone-numbers-form',\n  templateUrl: './list-phone-numbers-form.component.html',\n  styleUrls: ['./list-phone-numbers-form.component.css'],\n})\nexport class ListPhoneNumbersFormComponent implements OnInit {\n  phoneNumbersOutput: PhoneNumberOutput;\n\n  constructor(private phoneNumberService: PhoneNumberService) {}\n\n  ngOnInit(): void {\n    this.phoneNumberService.getPhoneNumbers().subscribe(\n      (data) => {\n        this.phoneNumbersOutput = data;\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"card-body\">\n            <ul class=\"text-center list-inline\">\n                <li class=\"list-inline-item\">\n                    <input class=\"btn btn-outline-dark\" type=\"file\" accept=\".csv\"\n                        (change)=\"handleFileSelection($event)\">\n                </li>\n                <li class=\"list-inline-item\">\n                    <button class=\"btn btn-outline-dark\" (click)=\"uploadCSV()\">Upload CSV</button>\n                </li>\n                <li *ngIf=\"uploadMessage === 'ok'\" class=\"list-inline-item\">\n                    <p class=\"text-success\">Uploaded!</p>\n                </li>\n                <li *ngIf=\"uploadMessage !== '' && uploadMessage !== 'ok'\" class=\"list-inline-item\">\n                    <p class=\"text-danger\">{{uploadMessage}}</p>\n                </li>\n\n            </ul>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PhoneNumberService } from '../../services/phone-number.service';\n\n@Component({\n  selector: 'app-upload-form',\n  templateUrl: './upload-form.component.html',\n  styleUrls: ['./upload-form.component.css'],\n})\nexport class UploadFormComponent implements OnInit {\n  declare fileToUpload: File;\n\n  uploadMessage: string = '';\n\n  constructor(private phoneNumberService: PhoneNumberService) {}\n\n  ngOnInit(): void {}\n\n  handleFileSelection(event: any) {\n    this.fileToUpload = event.target.files.item(0);\n  }\n\n  uploadCSV() {\n    this.phoneNumberService.uploadCSVRequest(this.fileToUpload).subscribe(\n      (data) => {\n        console.log(data);\n\n        this.uploadMessage = 'ok';\n      },\n      (err) => {\n        console.error(err);\n\n        this.uploadMessage = 'Error: ' + err.message;\n      }\n    );\n  }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UploadFormComponent } from './components/upload-form/upload-form.component';\nimport { ListPhoneNumbersFormComponent } from './components/list-phone-numbers-form/list-phone-numbers-form.component';\nimport { ValidatePhoneNumberFormComponent } from './components/validate-phone-number-form/validate-phone-number-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UploadFormComponent,\n    ListPhoneNumbersFormComponent,\n    ValidatePhoneNumberFormComponent,\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ListPhoneNumbersFormComponent } from './components/list-phone-numbers-form/list-phone-numbers-form.component';\nimport { UploadFormComponent } from './components/upload-form/upload-form.component';\nimport { ValidatePhoneNumberFormComponent } from './components/validate-phone-number-form/validate-phone-number-form.component';\n\nconst routes: Routes = [\n  { path: 'upload-form', component: UploadFormComponent },\n  { path: 'list-phone-numbers-form', component: ListPhoneNumbersFormComponent },\n  {\n    path: 'validate-phone-number-form',\n    component: ValidatePhoneNumberFormComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"card-body\">\n            <ul class=\"text-center list-inline\">\n                <li class=\"list-inline-item\">\n                    <input type=\"text\" [(ngModel)]=\"phoneNumber\" />\n                </li>\n                <li class=\"list-inline-item\">\n                    <button class=\"btn btn-outline-dark\" (click)=\"validatePhoneNumberFromForm()\">Validate</button>\n                </li>\n                <li *ngIf=\"isValid\" class=\"list-inline-item\">\n                    <p class=\"text-success\">Accepted!</p>\n                </li>\n                <li *ngIf=\"!isValid\" class=\"list-inline-item\">\n                    <p class=\"text-danger\">{{validateMessage}}</p>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { PhoneNumberService } from '../../services/phone-number.service';\n\n@Component({\n  selector: 'app-validate-phone-number-form',\n  templateUrl: './validate-phone-number-form.component.html',\n  styleUrls: ['./validate-phone-number-form.component.css'],\n})\nexport class ValidatePhoneNumberFormComponent implements OnInit {\n  phoneNumber: string;\n\n  validateMessage: string;\n  isValid: boolean;\n\n  constructor(private phoneNumberService: PhoneNumberService) {}\n\n  ngOnInit(): void {}\n\n  public validatePhoneNumberFromForm() {\n    this.phoneNumberService.validatePhoneNumber(this.phoneNumber).subscribe(\n      (data) => {\n        this.isValid = data.valid;\n        this.validateMessage = data.message;\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}